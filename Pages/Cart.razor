
@page "/cart"
@using ShoppingCart.Data
@inject ShoppingCart.Data.AddItemsToCartService AddItemsToCartService
@inject ItemService ItemService



<table class="table" style="color: #e5e3e3;">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Name</th>
            <th>Qantity</th>
            <th>Unit Price</th>
            <th>Amount</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var itemInCart in AddItemsToCartService.ItemsInCart)
            {
                var item = new Item()
                {
                    Id = itemInCart.ItemId,
                    Name = ItemService.Items.Where(itemId => itemId.Id == itemInCart.ItemId).Select(name => name.Name).FirstOrDefault(),
                    Price = ItemService.Items.Where(itemId => itemId.Id == itemInCart.ItemId).Select(price => price.Price).FirstOrDefault()
                };
                var amount = item.Price * itemInCart.Quantity;
                <tr>
                    <td>@item.Name</td>
                    <td>@itemInCart.Quantity</td>
                    <td>@item.Price</td>
                    <td>@amount</td>
                    <td>
                        <button type="button" @onclick="@(() => RemoveItemFromCart(itemInCart))"
                                class="btn btn-outline-primary btn-sm m-0 waves-effect">
                            Remove from cart
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code
{
    private void RemoveItemFromCart(AddItemsToCart removeItem)
    {
        AddItemsToCartService.ItemsInCart.Remove(removeItem);
    }

}


