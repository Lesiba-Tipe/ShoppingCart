
@page "/cart"
@using ShoppingCart.Data
@inject ShoppingCart.Data.AddItemsToCartService AddItemsToCartService
@inject ItemService ItemService

<div class="container">
   <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Name</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>Amount</th>
                <th></th>
            </tr>
        </thead>
        <tbody style="background-color:#797777; color:#090909">
            @{
                foreach (var itemInCart in AddItemsToCartService.ItemsInCart)
                {
                     var item = ItemService.Items.Where(id => id.Id == itemInCart.ItemId).SingleOrDefault();
                    var amount = item.Price * itemInCart.Quantity;
                    <tr>
                        <td>@item.Name</td>

                        <td>@itemInCart.Quantity</td>
                        <td>@item.Price</td>
                        <td>@amount</td>
                        <td>
                            <button type="button" @onclick="@(() => RemoveItemFromCart(itemInCart))"
                                    class="btn btn-primary btn-sm m-0 waves-effect">
                                Remove from cart
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>



    <table class="table" style="width:50%">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Order:</th>
                <th>Total Amount:</th>
            </tr>
        </thead>

        <tbody style="background-color:#797777; color:#090909">
            <tr>
                <td>@random.Next(10000, 99999)</td>
                @{
                    decimal totalCost = 0;

                    foreach (var itemInCart in AddItemsToCartService.ItemsInCart)
                    {
                        var item = ItemService.Items.Where(id => id.Id == itemInCart.ItemId).SingleOrDefault();
                        totalCost += itemInCart.Quantity * item.Price;
                    }

                    <td>@totalCost</td>
                }

            </tr>
        </tbody>
    </table>

    
</div>




@code
{
    private Random random = new Random();

    private void RemoveItemFromCart(AddItemsToCart removeItem)
    {
        AddItemsToCartService.ItemsInCart.Remove(removeItem);
    }

    private void ShowOrder()
    {

    }

}


