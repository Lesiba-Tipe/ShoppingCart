
@page "/"
@inject AddItemsToCartService AddItemsToCartService
@inject ItemService ItemService
@inject NavigationManager NavigationManager
@using ShoppingCart.Data

<div class="container">



    <div class="row" style="margin:auto">
        <div class="col-md-12 bg-light text-right">
            <button type="button" class="btn btn-outline-primary" @onclick="GoToCart">
                Go to cart
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-cart" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm7 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"></path>
                </svg>
            </button>
        </div>
    </div>


    <div class="card-columns">
        @foreach (var item in ItemService.Items)
        {
            <div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
                <div class="card-header">@item.Name</div>
                <div class="card-body">
                    <h5 class="card-title">R @item.Price</h5>
                    <p class="card-text">@item.Description</p>
                    <button type="button" @onclick="@(() => AddItemToCart(item))"
                            class="btn btn-outline-primary btn-sm m-0 waves-effect">
                        Add to cart
                    </button>
                </div>
            </div>
        }
    </div>

    <p>@AddItemsToCartService.ItemsInCart.Count</p>

</div>


@code
{

    private void GoToCart()
    {

        if (AddItemsToCartService.ItemsInCart.Count <= 0)
        {
            //Alet user that the cart is empty

        }
        else
        {
            NavigationManager.NavigateTo("cart");
        }
    }

    private void AddItemToCart(Item item)
    {
        var addItermInCart = AddItemsToCartService.ItemsInCart.Where(i => i.ItemId == item.Id).SingleOrDefault();

        if (addItermInCart == null )
        {
            AddItemsToCartService.ItemsInCart.Add(new AddItemsToCart() { ItemId = item.Id,Quantity = 1 });
        }
        else
        {
            AddItemsToCartService.ItemsInCart.Where(i => i.ItemId == item.Id).Select(quantity => { quantity.Quantity++; return quantity; }).ToList();
        }
    }


}
